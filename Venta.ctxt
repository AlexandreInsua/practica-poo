#BlueJ class context
comment0.target=Venta
comment0.text=\r\n\ La\ clase\ Venta\ representa\ una\ transacci\u00F3n\ de\ venta\ de\ mercanc\u00EDa\ relacionada\ con\ un\ pedido.\r\n\ Contiene\ informaci\u00F3n\ sobre\ el\ pedido\ asociado,\ la\ cantidad\ de\ mercanc\u00EDa\ vendida\ y\ el\ precio.\r\n\ Tambi\u00E9n\ proporciona\ m\u00E9todos\ para\ calcular\ el\ beneficio\ de\ la\ venta\ y\ generar\ una\ representaci\u00F3n\ en\ cadena.\r\n\ \r\n\ @author\ Alexandre\ Insua\ Moreira\r\n\ @version\ 1.0\r\n
comment1.params=pedido\ cantidad\ precio
comment1.target=Venta(Pedido,\ float,\ float)
comment1.text=\r\n\ Crea\ una\ nueva\ instancia\ de\ la\ clase\ Venta.\r\n\ \r\n\ @param\ pedido\ El\ pedido\ relacionado\ con\ la\ venta.\r\n\ @param\ cantidad\ La\ cantidad\ de\ mercanc\u00EDa\ vendida\ en\ kilogramos.\r\n\ @param\ precio\ El\ precio\ de\ la\ mercanc\u00EDa\ en\ euros\ al\ momento\ de\ la\ venta.\r\n
comment2.params=
comment2.target=Pedido\ getPedido()
comment3.params=
comment3.target=float\ getBeneficio()
comment3.text=\r\n\ Calcula\ y\ devuelve\ el\ beneficio\ de\ la\ venta.\r\n\ El\ beneficio\ se\ calcula\ multiplicando\ la\ cantidad\ de\ mercanc\u00EDa\ vendida\ por\ el\ precio.\r\n\ \r\n\ @return\ El\ beneficio\ de\ la\ venta\ en\ euros.\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ Genera\ una\ representaci\u00F3n\ en\ cadena\ de\ la\ venta.\r\n\ \r\n\ @return\ Una\ cadena\ que\ contiene\ detalles\ sobre\ la\ venta,\ incluido\ el\ n\u00FAmero\ de\ pedido,\r\n\ la\ fecha\ de\ la\ venta,\ la\ cantidad\ de\ mercanc\u00EDa,\ el\ precio\ formateado\ y\ el\ beneficio\ formateado.\r\n
numComments=5
