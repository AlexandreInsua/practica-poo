#BlueJ class context
comment0.target=Logistica
comment0.text=\r\n\ Clase\ que\ representa\ una\ empresa\ de\ log\u00EDstica.\r\n\ Esta\ clase\ maneja\ los\ precios\ y\ c\u00E1lculos\ relacionados\ con\ la\ log\u00EDstica\ de\ los\ pedidos.\r\n\ Los\ precios\ se\ estructuran\ en\ funci\u00F3n\ del\ tipo\ de\ producto\ (perecedero\ y\ no\ perecedero)\r\n\ y\ del\ tipo\ de\ log\u00EDstica\ dependiendo\ de\ la\ distancia\ que\ se\ debe\ recorrer\r\n\ (peque\u00F1a\ log\u00EDstica\ y\ gran\ log\u00EDstica.\r\n\ El\ c\u00E1lculo\ de\ los\ costes\ de\ cada\ pedido\ se\ basa\ en\ la\ suma\ de\ los\ costes\ de\ la\ gran\ log\u00EDstica\r\n\ y\ la\ peque\u00F1a\ log\u00EDstica,\ pero\ la\ forma\ en\ que\ se\ calculan\ estos\ parciales\ var\u00EDan\ seg\u00FAn\r\n\ el\ tipo\ de\ producto\ del\ pedido.\r\n\ \r\n\ @author\ Alexandre\ Insua\ Moreira\r\n\ @version\ 1.0\r\n
comment1.params=nombre\ pglp\ pplp\ pglnp\ pplnp
comment1.target=Logistica(java.lang.String,\ float,\ float,\ float,\ float)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Logistica.\r\n\r\n\ Este\ constructor\ crea\ una\ instancia\ de\ Logistica\ con\ los\ par\u00E1metros\ proporcionados,\r\n\ asignando\ los\ valores\ de\ nombre\ y\ precios\ correspondientes\ despu\u00E9s\ de\ validar\ los\ precios.\r\n\r\n\ @param\ nombre\ Nombre\ de\ la\ log\u00EDstica.\r\n\ @param\ pglp\ precio\ de\ gran\ log\u00EDstica\ de\ los\ produtos\ perecederos\ (GLP).\r\n\ @param\ pplp\ precio\ de\ la\ peque\u00F1a\ log\u00EDstica\ de\ los\ produtos\ perecederos\ (PLP).\r\n\ @param\ pglnp\ Precio\ de\ Producto\ Perecedero\ (GLNP).\r\n\ @param\ pplnp\ Precio\ de\ Producto\ No\ Perecedero\ (PLNP).\r\n\ \r\n\ @throws\ IllegalArgumentException\ Si\ la\ condici\u00F3n\ de\ validaci\u00F3n\ no\ se\ cumple\ y\ los\ precios\ no\ satisfacen\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ las\ relaciones\ requeridas.\r\n
comment10.params=precio\ cantidad
comment10.target=float\ calcularCosteTramo(float,\ int)
comment11.params=distancia\ precio
comment11.target=float\ calcularCosteGranLogistica(int,\ float)
comment12.params=distancia\ precio\ cantidad
comment12.target=float\ calcularCostePequenaLogistica(int,\ float,\ int)
comment2.params=
comment2.target=java.lang.String\ getNombre()
comment2.text=\r\n\ Devuelve\ el\ nombre\ de\ la\ log\u00EDstica.\r\n\ \r\n\ @return\ El\ nombre\ almacenado\ en\ esta\ instancia.\r\n
comment3.params=pedido
comment3.target=float\ calcularPrecioLogisticaPedido(Pedido)
comment3.text=\r\n\ Calcula\ el\ precio\ total\ de\ la\ log\u00EDstica\ para\ un\ pedido\ dado.\r\n\ \r\n\ @param\ pedido\ El\ pedido\ para\ el\ cual\ se\ calcular\u00E1\ el\ precio\ de\ la\ log\u00EDstica.\r\n\ @return\ El\ costo\ total\ de\ la\ log\u00EDstica\ para\ el\ pedido.\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ Devuelve\ una\ representaci\u00F3n\ en\ cadena\ de\ la\ instancia\ de\ Logistica.\r\n\ \r\n\ @return\ Una\ cadena\ que\ contiene\ el\ nombre\ de\ la\ log\u00EDstica\ y\ sus\ precios\ asociados.\r\n
comment5.params=pglp\ pplp\ pglnp\ pplnp
comment5.target=boolean\ validarPrecios(float,\ float,\ float,\ float)
comment5.text=\r\n\ Valida\ los\ precios\ de\ los\ los\ costes\ de\ los\ diferentes\ tipos\ de\ logistica\r\n\ en\ funci\u00F3n\ del\ tipo\ de\ producto.\r\n\ Verifica\ que\ se\ cumpla\ el\ precio\ de\ la\ gran\ log\u00EDstica\ sea\ mayor\ \r\n\ que\ el\ coste\ de\ la\ peque\u00F1a\ log\u00EDstica\ para\ el\ mismo\ tipo\ de\ producto.\r\n\ Verifica\ que\ el\ precio\ de\ la\ gran\ log\u00EDstica\ de\ los\ produtos\ pereceros\r\n\ sea\ mayor\ que\ el\ de\ la\ gran\ log\u00EDstica\ de\ los\ no\ perecederos.\r\n\r\n\ @param\ pglp\ precio\ de\ gran\ log\u00EDstica\ de\ los\ produtos\ perecederos\ (GLP).\r\n\ @param\ pplp\ precio\ de\ la\ peque\u00F1a\ log\u00EDstica\ de\ los\ produtos\ perecederos\ (PLP).\r\n\ @param\ pglnp\ Precio\ de\ Producto\ Perecedero\ (GLNP).\r\n\ @param\ pplnp\ Precio\ de\ Producto\ No\ Perecedero\ (PLNP).\r\n\ @return\ true\ si\ el\ precio\ GLP\ es\ mayor\ que\ los\ precios\ PLP\ y\ GLNP\ es\ mayor\ que\ PLNP\ \r\n\ \ \ \ \ \ \ \ \ y\ GLP\ es\ mayor\ que\ GLNP,\ false\ en\ caso\ contrario.\r\n
comment6.params=distancia\ tramo
comment6.target=int\ calcularDistanciaPequenaLogistica(int,\ int)
comment7.params=distancia\ tramo
comment7.target=int\ calculaDistanciaGranLogistica(int,\ int)
comment8.params=cantidad
comment8.target=int\ calcularToneladas(int)
comment9.params=distancia
comment9.target=int\ calcularNumeroTramos(int)
numComments=13
